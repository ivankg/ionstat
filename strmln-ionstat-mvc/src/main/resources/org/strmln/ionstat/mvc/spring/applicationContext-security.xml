<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans-4.1.xsd
              http://www.springframework.org/schema/security https://www.springframework.org/schema/security/spring-security-4.0.xsd
              http://www.springframework.org/schema/context/spring-context-4.0.xsd">

	<security:http pattern="/login.html" security="none" />
	<security:http pattern="/loginFailed.html" security="none" />

	<security:http use-expressions="false"
		access-decision-manager-ref="policyAccessDecisionManager"
		authentication-manager-ref="defaultAuthenticationManager">
		<security:intercept-url pattern="/**"
			access="POLICY_ACCESS_IONSTAT" />
		<security:anonymous enabled="false" />
		<security:form-login login-page='/login.html'
			username-parameter="username" password-parameter="password"
			default-target-url="/index.html" always-use-default-target="true"
			login-processing-url="/login.is" authentication-failure-url="/loginFailed.html" />
		<security:access-denied-handler
			error-page="/login.html" />

		<security:custom-filter ref="userProfileContextManagementFilter"
			position="LAST" />
	</security:http>

	<security:authentication-manager
		erase-credentials="false" alias="defaultAuthenticationManager">
		<security:authentication-provider
			user-service-ref="userProfileService">
			<security:password-encoder hash="sha" />
		</security:authentication-provider>
	</security:authentication-manager>

	<security:global-method-security
		secured-annotations="enabled" access-decision-manager-ref="policyAccessDecisionManager"
		authentication-manager-ref="defaultAuthenticationManager"
		jsr250-annotations="enabled">
	</security:global-method-security>

	<bean id="policyAccessDecisionManager"
		class="org.springframework.security.access.vote.AffirmativeBased">
		<constructor-arg>
			<list>
				<ref bean="policyVoter" />
			</list>
		</constructor-arg>
	</bean>

	<bean id="policyVoter" class="org.springframework.security.access.vote.RoleVoter">
		<property name="rolePrefix" value="POLICY_" />
	</bean>

	<bean id="passwordEncoder"
		class="org.springframework.security.authentication.encoding.ShaPasswordEncoder" />

	<bean id="userProfileContextManagementFilter"
		class="org.strmln.ionstat.mvc.filters.UserProfileContextManagementFilter" />

</beans>